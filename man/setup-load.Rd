% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/project_setup.R
\name{setup_project}
\alias{setup_project}
\alias{load_project}
\alias{load_project_from_path}
\alias{load_test_project}
\title{Setup or Load REDCapSync Project}
\usage{
setup_project(
  short_name,
  dir_path,
  redcap_base,
  token_name = paste0("REDCapSync_", short_name),
  force = FALSE,
  merge_form_name = "merged",
  use_csv = FALSE,
  get_type = c("identified", "deidentified", "strict-deidentified"),
  auto_check_token = TRUE,
  silent = FALSE
)

load_project(short_name, validate = TRUE)

load_project_from_path(project_path, validate = TRUE)

load_test_project(short_name = "TEST_repeating", with_data = FALSE)
}
\arguments{
\item{short_name}{A character string with no spaces or symbols representing
the unique short name for the REDCap project.}

\item{dir_path}{Optional character string representing the directory path
where you want the REDCap project data to be stored. If missing, project object
will only be in current R session.}

\item{redcap_base}{A character string representing the base URL of the REDCap
server.}

\item{token_name}{An optional character string for setting your token name.
Default is \verb{REDCapSync_<short_name>}}

\item{force}{Logical (TRUE/FALSE). If TRUE, forces the setup even if the \code{project}
object already exists. Default is \code{FALSE}.}

\item{merge_form_name}{A character string representing the name of the merged
form. Default is "merged".}

\item{use_csv}{Logical (TRUE/FALSE). If TRUE, uses CSV files for data
storage. Default is \code{FALSE}.}

\item{get_type}{optional character of REDCap API call type.
data as if user ran \code{sync_project}. Default is \code{FALSE}.}

\item{auto_check_token}{Logical (TRUE/FALSE). If TRUE, automatically
checks the validity of the REDCap API token. Default is \code{TRUE}.}

\item{silent}{Logical (TRUE/FALSE). For messages.}

\item{validate}{Logical (TRUE/FALSE). If TRUE, validates project object based on
current rules. Default is \code{TRUE}.}

\item{project_path}{A character string representing the file path of the exact
\verb{<short_name>_REDCapSync.RData} file to be loaded.}

\item{with_data}{Logical (TRUE/FALSE). If TRUE, loads the test project object with}
}
\value{
REDCapSync \code{project} list object.
}
\description{
Setup or Load the \code{project} object for pipeline.
}
\details{
This function sets up the \code{project} object by storing the REDCap API token and
other configurations required for interacting with the REDCap server.
It ensures that the token is valid and ready for use in subsequent API calls.
Neither function directly attempts communication with REDCap.

\code{setup_project} is used the first time you initialize/link a REDCap project.
Mainly, it sets your unique \code{short_name} and your intended directory.
Unless you run \code{force = TRUE} the default will first try load_project.
dir_path is technically optional but without it the user cannot
save/load/update projects.

\code{load_project} can be used with just the \code{short_name} parameter after you have
already run \code{setup_project} in the past with an established directory. \code{dir_path}
is optional for this function but can be used if you relocated the directory.
}
\examples{
\dontshow{if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# Initialize the project object with the REDCap API token and URL
project <- setup_project(
  short_name = "TEST",
  dir_path = "path/to/secure/file/storage",
  redcap_base = "https://redcap.yourinstitution.edu/"
)
project <- load_project("TEST")
\dontshow{\}) # examplesIf}
}
\seealso{
\code{\link[REDCapSync]{get_projects}} for retrieving a list of projects from
the directory cache.

Other project object: 
\code{\link{save_project}()}
}
\concept{project object}
